name: Build and Publish NPM Package

on:
  push:
    branches: [main]
    tags:
      - "v*"
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          registry-url: "https://registry.npmjs.org"

      # - name: Install dependencies
      #   run: npm ci

      - name: Install dependencies
        run: npm install rimraf

      - name: Generate icons map
        run: node generate-icons-map

name: Build and Publish NPM Package

on:
  push:
    branches: [main]
    tags:
      - 'v*'
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Configure Git
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions@github.com'

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test
        
      - name: Build package
        run: npm run build

      - name: Version and Publish
        if: startsWith(github.ref, 'refs/tags/v') || github.event_name == 'release' || github.ref == 'refs/heads/main'
        run: |
          # Extract version from tag if available
          if [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
            npm version $VERSION --no-git-tag-version
          else
            # Bump patch version if no specific tag
            npm version patch --no-git-tag-version
          fi
          
          # Publish with the new version
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}